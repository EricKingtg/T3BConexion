/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.org.t3b.framework.gui.main;

import com.org.t3b.framework.utils.Config;
import com.org.t3b.framework.utils.Menu;
import com.org.t3b.log.utils.Logger3B;

import java.awt.Component;
import java.util.HashMap;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;


/**
 *
 * @author daniel
 */
public class VMain extends javax.swing.JFrame {

    private HashMap<String, String> cnf = null;
    private Menu cmpMenu = null;
    /**
     * Creates new form VMain
     */
    public VMain() {
        initComponents();
        inicializaPantalla();
        this.cargaMenu();
    }
    
    
    /**
     * Metodo para inicializar la pantalla, carga la configuracion predeterminada de la
     * pantalla y algunos elementos asi como de la inicializacion de las varibales que 
     * se enviaran a las pantallas adicionales, tales como:
     *  Usuario que se loguea
     *  Configuracion para la base de datos
     *  etc...
     */
    private void inicializaPantalla(){
        try{
            //Inicializa la configuracion de la pantalla
            if(!Config.configCargada)
                Config.cargaConfig();
            this.cnf = Config.devuelveConfiguracion();
            //Pone la pantalla maximizada
            this.setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
            //Inicializa la barra de progreso
            this.jProgressBar1.setIndeterminate(false);
            this.jProgressBar1.setValue(0);
            //Inicializa la etiqueta de estatus
            this.lblEstatus.setText("");
        }catch(Exception ex){
            Logger3B.Log(1, "T3BAppAlmacen", this.getClass().toString(), "inicializaPantalla", ex.getMessage());
        }
    }
    
    /**
     * Metodo para cargar el menu
     */
    private void cargaMenu(){
        cmpMenu = new Menu(this);
        this.setJMenuBar(cmpMenu.creaMenu());
    }
    
    /**
     * Metodo para devolver un objeto generico con la configuracion a la base de datos
     * @param configdto
     * @return 
     */
    public Object obtieneConfig(Object configdto){
        return com.org.t3b.framework.utils.Config.devuelveConfiguracion(configdto);
    }
    
    public HashMap<String, String> obtieneConfig(){
        return this.cnf;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDesk = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        jProgressBar1 = new javax.swing.JProgressBar();
        lblEstatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(jProgressBar1);

        lblEstatus.setText(" ");
        jToolBar1.add(lblEstatus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDesk)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlDesk, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void poneLblEstatus(String text){
        this.lblEstatus.setText(text);
    }
    
    public void adminPrgBar(int activa){
        this.jProgressBar1.setIndeterminate(activa == 1);
    }
    
    public void ponePantalla(Object obj){
//        this.pnlDesk.add((Component) obj);
//        this.pnlDesk.setSelectedFrame((JInternalFrame) obj);
    }
    
    public boolean existePantalla(Object obj){
//        boolean flag = false;
//        JInternalFrame[] lista = this.pnlDesk.getAllFrames();
//        for (JInternalFrame lista1 : lista) {
//            if(lista1.getClass().equals(obj.getClass())){
//                flag = true;
//                break;
//            }
//        }
//        return flag;
        return false;
    }
    
    public JDesktopPane getPanel(){
        return this.pnlDesk;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblEstatus;
    private javax.swing.JDesktopPane pnlDesk;
    // End of variables declaration//GEN-END:variables
}
